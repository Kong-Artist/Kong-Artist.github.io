{"version":3,"sources":["/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/$_gendir lazy","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.css","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.html","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.ts","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.module.ts","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/environments/environment.ts","/Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wIAAwI,OAAO,yYAAyY,2BAA2B,wB;;;;;;;;;;;;;;;;;;;;ACAzgB;AAEI;AAO9C,IAAa,YAAY;IAMvB,sBAAY,IAAU;QALtB,UAAK,GAAG,wBAAwB,CAAC;QACjC,UAAK,GAAG,0FAA0F,CAAC;QAEnG,SAAI,GAAG,EAAE,CAAC;QAGR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,4BAAK,GAAL,UAAM,KAAU;QACd,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,kDAAkD;IAClD,oCAAa,GAAb,UAAc,MAAwB;QAAtC,iBAMC;QALC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACvB,SAAS,CAAC,UAAC,GAAa;YACvB,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IACH,mBAAC;AAAD,CAAC;AAxBY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;yDAOkB,2DAAI,oBAAJ,2DAAI;GANX,YAAY,CAwBxB;AAxBwB;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAEE;AAEI;AAa/C,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IAXrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,gFAAa;YACb,iEAAU;SACX;QACD,SAAS,EAAE,EAAE;QACb,SAAS,EAAE,CAAC,oEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;AClBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{title}}\\n  </h1>\\n</div>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row flex center\\\">\\n    <div class=\\\"col-sm flex\\\">\\n      <input #search placeholder=\\\"Search for GIFs...\\\" (keyup)=\\\"onKey($event)\\\">\\n      <div class=\\\"btn btn-primary\\\" (click)=\\\"searchForGifs(search)\\\">Search</div>\\n    </div>\\n  </div>\\n  <div class=\\\"row flex center wrap\\\">\\n    <img *ngFor=\\\"let g of gifs\\\" src=\\\"{{g.images.fixed_height.url}}\\\">\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\nimport { Http, Response} from '@angular/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Steven\\'s Giphy Search';\n  query = 'http://api.giphy.com/v1/gifs/search?api_key=W9694uE7E0PQ91pv5jUgxXsn7GnJ3sSR&limit=20&q='; \n  http: Http;\n  gifs = [];\n\n  constructor(http: Http) {\n    this.http = http;\n  }\n\n  onKey(event: any) {\n    if (event.keyCode === 13) {\n      this.searchForGifs(event.target);\n    }\n  }\n\n  // Search for Gifs using Giphy API given the input\n  searchForGifs(search: HTMLInputElement) : void {\n    var apiLink = this.query + search.value; \n    this.http.request(apiLink) \n      .subscribe((res: Response) => { \n        this.gifs = res.json().data;\n      }); \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/FrankKwakkelaar/Folders/Shogun_challenge/giphy-search/src/main.ts"],"sourceRoot":"webpack:///"}